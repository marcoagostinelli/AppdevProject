// Generated by view binder compiler. Do not edit!
package com.example.finalproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.finalproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLeaveRatingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RatingBar editRating;

  @NonNull
  public final TextView hotelName;

  @NonNull
  public final TextView hotelPrice;

  @NonNull
  public final Button rating;

  private ActivityLeaveRatingBinding(@NonNull ConstraintLayout rootView,
      @NonNull RatingBar editRating, @NonNull TextView hotelName, @NonNull TextView hotelPrice,
      @NonNull Button rating) {
    this.rootView = rootView;
    this.editRating = editRating;
    this.hotelName = hotelName;
    this.hotelPrice = hotelPrice;
    this.rating = rating;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLeaveRatingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLeaveRatingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_leave_rating, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLeaveRatingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.editRating;
      RatingBar editRating = ViewBindings.findChildViewById(rootView, id);
      if (editRating == null) {
        break missingId;
      }

      id = R.id.hotelName;
      TextView hotelName = ViewBindings.findChildViewById(rootView, id);
      if (hotelName == null) {
        break missingId;
      }

      id = R.id.hotelPrice;
      TextView hotelPrice = ViewBindings.findChildViewById(rootView, id);
      if (hotelPrice == null) {
        break missingId;
      }

      id = R.id.rating;
      Button rating = ViewBindings.findChildViewById(rootView, id);
      if (rating == null) {
        break missingId;
      }

      return new ActivityLeaveRatingBinding((ConstraintLayout) rootView, editRating, hotelName,
          hotelPrice, rating);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

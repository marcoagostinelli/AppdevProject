// Generated by view binder compiler. Do not edit!
package com.example.finalproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.finalproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBookHotelBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText address;

  @NonNull
  public final EditText checkIn;

  @NonNull
  public final EditText checkOut;

  @NonNull
  public final EditText creditCard;

  @NonNull
  public final TextView hotelName;

  @NonNull
  public final EditText name;

  @NonNull
  public final Button next;

  @NonNull
  public final EditText numOfPeople;

  @NonNull
  public final TextView price;

  @NonNull
  public final TextView text;

  @NonNull
  public final TextView text1;

  @NonNull
  public final TextView text2;

  @NonNull
  public final TextView text3;

  @NonNull
  public final TextView textView;

  private ActivityBookHotelBinding(@NonNull ConstraintLayout rootView, @NonNull EditText address,
      @NonNull EditText checkIn, @NonNull EditText checkOut, @NonNull EditText creditCard,
      @NonNull TextView hotelName, @NonNull EditText name, @NonNull Button next,
      @NonNull EditText numOfPeople, @NonNull TextView price, @NonNull TextView text,
      @NonNull TextView text1, @NonNull TextView text2, @NonNull TextView text3,
      @NonNull TextView textView) {
    this.rootView = rootView;
    this.address = address;
    this.checkIn = checkIn;
    this.checkOut = checkOut;
    this.creditCard = creditCard;
    this.hotelName = hotelName;
    this.name = name;
    this.next = next;
    this.numOfPeople = numOfPeople;
    this.price = price;
    this.text = text;
    this.text1 = text1;
    this.text2 = text2;
    this.text3 = text3;
    this.textView = textView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBookHotelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBookHotelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_book_hotel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBookHotelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address;
      EditText address = ViewBindings.findChildViewById(rootView, id);
      if (address == null) {
        break missingId;
      }

      id = R.id.checkIn;
      EditText checkIn = ViewBindings.findChildViewById(rootView, id);
      if (checkIn == null) {
        break missingId;
      }

      id = R.id.checkOut;
      EditText checkOut = ViewBindings.findChildViewById(rootView, id);
      if (checkOut == null) {
        break missingId;
      }

      id = R.id.creditCard;
      EditText creditCard = ViewBindings.findChildViewById(rootView, id);
      if (creditCard == null) {
        break missingId;
      }

      id = R.id.hotelName;
      TextView hotelName = ViewBindings.findChildViewById(rootView, id);
      if (hotelName == null) {
        break missingId;
      }

      id = R.id.name;
      EditText name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.next;
      Button next = ViewBindings.findChildViewById(rootView, id);
      if (next == null) {
        break missingId;
      }

      id = R.id.numOfPeople;
      EditText numOfPeople = ViewBindings.findChildViewById(rootView, id);
      if (numOfPeople == null) {
        break missingId;
      }

      id = R.id.price;
      TextView price = ViewBindings.findChildViewById(rootView, id);
      if (price == null) {
        break missingId;
      }

      id = R.id.text;
      TextView text = ViewBindings.findChildViewById(rootView, id);
      if (text == null) {
        break missingId;
      }

      id = R.id.text1;
      TextView text1 = ViewBindings.findChildViewById(rootView, id);
      if (text1 == null) {
        break missingId;
      }

      id = R.id.text2;
      TextView text2 = ViewBindings.findChildViewById(rootView, id);
      if (text2 == null) {
        break missingId;
      }

      id = R.id.text3;
      TextView text3 = ViewBindings.findChildViewById(rootView, id);
      if (text3 == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      return new ActivityBookHotelBinding((ConstraintLayout) rootView, address, checkIn, checkOut,
          creditCard, hotelName, name, next, numOfPeople, price, text, text1, text2, text3,
          textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
